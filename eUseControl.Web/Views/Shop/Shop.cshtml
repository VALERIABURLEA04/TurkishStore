@using System.Web.Optimization
@model List<businessLogic.Dtos.ProductDtos.ProductDto>

@{
    ViewBag.Title = "Shop";
    Layout = null; // Use the appropriate layout if needed
    var isAuthenticated = Session["LoginStatus"]?.ToString() == "login" ? "true" : "false";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title - SACCHARINE</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
    <style>
        .product-card {
            border: none;
            margin-bottom: 40px;
            transition: box-shadow 0.3s ease, transform 0.3s ease;
            border-radius: 10px;
        }

        .product-card:hover {
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25);
            transform: scale(1.02);
        }

        .product-image {
            height: 500px!important;
            object-fit: cover;
            margin-bottom: 15px;
            border-radius: 10px;
        }

        .product-title {
            font-weight: bold;
            font-size: 1.2rem;
        }

        .product-price {
            color: #777;
        }

        .rounded-top {
            border-top-left-radius: 1rem;
            border-top-right-radius: 1rem;
        }
    </style>
    @Styles.Render("~/bundles/css")
</head>
<body>
    @Html.Partial("_Header")

    <div class="container mt-5">
        <h2 class="text-center mb-4 custom-header">Shop</h2>

        <div class="row">
            @if (Model != null && Model.Any())
            {
                foreach (var product in Model)
                {
                    <div class="col-md-4">
                        <div class="product-card mb-4 shadow-sm border rounded">
                            <div>
                                @if (!string.IsNullOrEmpty(product.ImageUrl))
                                {
                                    <img src="@product.ImageUrl"
                                         class="img-fluid rounded-top"
                                         alt="@product.Name"
                                         style="width: 100%; height: 200px; object-fit: cover;" />
                                }
                                else
                                {
                                    <img src="https://via.placeholder.com/150"
                                         class="img-fluid rounded-top"
                                         alt="Placeholder Image"
                                         style="width: 100%; height: 200px; object-fit: cover;" />
                                }
                            </div>

                            <div class="card-body p-3">
                                <h5 class="product-title">@product.Name</h5>
                                <p class="card-text">@product.Description</p>
                                <p class="product-price"><strong>Price:</strong> @product.Price.ToString("C")</p>

                                <div class="d-flex justify-content-between align-items-center">
                                    <form method="post" action="@Url.Action("AddToCart", "Cart")" class="m-0 p-0">
                                        <input type="hidden" name="productId" value="@product.Id" />
                                        <button type="submit" class="btn btn-primary w-100">
                                            <i class="fas fa-shopping-cart"></i> Add to Cart
                                        </button>
                                    </form>

                                    <i id="favorite-@product.Id"
                                       class="fa-heart text-danger ms-2 @(product.IsFavorite == true ? "fas" : "far") cursor-pointer"
                                       style="font-size: 2rem;"
                                       onclick="toggleFavorite(@product.Id)">
                                    </i>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No products available.</p>
            }

            @if (Session["Role"] != null && Session["Role"]?.ToString() == "300")
            {
                <div class="text-end mb-3">
                    @Html.ActionLink("Manage Products", "ProductList", "Admin", null, new { @class = "btn btn-warning" })
                </div>
            }
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
    const isAuthenticated = @Html.Raw(isAuthenticated.ToLower());

    function getFavoritesCookie() {
        const name = "favorites=";
        const decoded = decodeURIComponent(document.cookie);
        const parts = decoded.split(';');
        for (let c of parts) {
            c = c.trim();
            if (c.indexOf(name) === 0) {
                try {
                    return JSON.parse(c.substring(name.length));
                } catch {
                    return [];
                }
            }
        }
        return [];
    }

    function setFavoritesCookie(list) {
        const json = JSON.stringify(list);
        const d = new Date();
        d.setTime(d.getTime() + (30*24*60*60*1000));
        document.cookie = `favorites=${json};expires=${d.toUTCString()};path=/`;
    }

    function toggleFavorite(productId) {
        const icon = document.getElementById(`favorite-${productId}`);

        if (isAuthenticated) {
            fetch(`/Shop/ToggleFavorite/${productId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: productId })
            })
            .then(res => res.json())
            .then(data => {
                if (data.isFavorite) {
                    icon.classList.remove('far'); icon.classList.add('fas');
                } else {
                    icon.classList.remove('fas'); icon.classList.add('far');
                }
            })
            .catch(err => console.error(err));
        } else {
            let favs = getFavoritesCookie();
            const idx = favs.indexOf(productId);
            if (idx === -1) {
                favs.push(productId);
                icon.classList.remove('far'); icon.classList.add('fas');
            } else {
                favs.splice(idx, 1);
                icon.classList.remove('fas'); icon.classList.add('far');
            }
            setFavoritesCookie(favs);
        }
    }
    </script>
</body>
</html>